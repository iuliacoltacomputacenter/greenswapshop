<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, spUIActionsExecuter, spUtil) {
	var c = this;
	
	var ESIGNATURE = {
		"approved": "cbfe291147220100ba13a5554ee4904d",
		"rejected": "580f711147220100ba13a5554ee4904b"
	};
	
	spUtil.recordWatch($scope, "sysapproval_approver", "state=requested^sys_id="+ c.data.sys_id);

	c.action = function(state) {
		if(c.data.esignature.e_sig_required) {
			var requestParams = {
				username: c.data.esignature.username,
				userSysId: c.data.esignature.userSysId
			};
			spUIActionsExecuter.executeFormAction(ESIGNATURE[state], "sysapproval_approver" , c.data.sys_id, [] , "", requestParams).then(function(response) {
				});
		} else {
				c.data.op = state;
				c.server.update().then(function() {
					if (!c.data.updateID) // update failed
						spUtil.addErrorMessage(c.data.actionPreventedMsg);
					else
						c.data.state = state;
				});
		}
	}	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.question {
  text-align: center;
  margin-top: 1em;
  display: flex;
  flex-wrap: wrap;
}

.spacer {
  display:inline-block;
  width:5%;
}

.btn-question {
  flex-grow: 1;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data>{
  "data": {
    "fields": [
      {
        "type": "glide_date_time",
        "value": "2016-01-31T17:33:54+00:00",
        "label": "Approval Example Label"
      }
    ],
    "state": "requested",
    "label": "incident"
  },
  "options": {
    "color": "default"
  }
}</demo_data>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>true</has_preview>
        <id>approval_info_gss</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Approval Info GSS</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.actionPreventedMsg = gs.getMessage("Update failed");
	var gr = $sp.getRecord();
	if (gr == null || !gr.isValid()) {
		data.isValid = false;
		return;
	}
	
	data.isValid = true;
	data.isMine = isApprovalMine(gr);
	var userApprovalAccess = gs.hasRole("approval_admin") || (gs.hasRole("approver_user") && data.isMine);
	
	var approverDisplay = gr.approver.getDisplayValue();
	if (!data.isMine && approverDisplay)
		data.approverDisplay = approverDisplay;
	
	if (approverDisplay) {
		data.approvedMsg = gs.getMessage("Approved by {0}", approverDisplay);
		data.rejectedMsg = gs.getMessage("Rejected by {0}", approverDisplay);
	} else {
		data.approvedMsg = gs.getMessage("Approved");
		data.rejectedMsg = gs.getMessage("Rejected");
	}
	if (input && input.op && userApprovalAccess) {
		gr.state = input.op;
		data.updateID = gr.update();
		if (GlideStringUtil.nil(data.updateID)) {
			// update failed so fetch again for correct values
			gr = $sp.getRecord();
		}
		data.op = "";
	}

	var fields = $sp.getFields(gr, 'state,sys_created_on');

	if (gr.sys_mod_count > 0)
		fields.push($sp.getField(gr, 'sys_updated_on'));

	data.fields = fields;
	data.state = gr.state.toString();
	data.sys_updated_on = gr.sys_updated_on.toString();
	data.sys_id = gr.getUniqueValue();
	data.table = gr.getTableName();
	data.label = getRecordBeingApproved(gr).getLabel();
	data.esignature = {
		username:  gs.getUserName(),
		userSysId: gs.getUserID(),
		e_sig_required: checkESig(gr)
};
	function checkESig(approvalGR) {
		var esigRegistryGR = new GlideRecord("e_signature_registry");
		if (!esigRegistryGR.isValid())
			return false;
		
		var table = approvalGR.getValue("source_table");
		if (!table)
			table = approvalGR.sysapproval.sys_class_name;
		if (!table)
			return false;
		
		esigRegistryGR.addQuery("enabled", "true");
		esigRegistryGR.addQuery("table_name", table);
		esigRegistryGR.query();
		return esigRegistryGR.hasNext();
	}
	
	function getRecordBeingApproved(gr) {
		if (!gr.sysapproval.nil())
			return gr.sysapproval.getRefRecord();

		return gr.document_id.getRefRecord();
	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>florian.franke</sys_created_by>
        <sys_created_on>2022-04-22 09:26:03</sys_created_on>
        <sys_id>250e25411b430110dd75c991604bcb95</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Approval Info GSS</sys_name>
        <sys_package display_value="Green Swap Shop" source="x_762203_green_swa">f6bf51942f610110184155272799b66f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Green Swap Shop">f6bf51942f610110184155272799b66f</sys_scope>
        <sys_update_name>sp_widget_250e25411b430110dd75c991604bcb95</sys_update_name>
        <sys_updated_by>florian.franke</sys_updated_by>
        <sys_updated_on>2022-04-22 09:33:56</sys_updated_on>
        <template><![CDATA[<div ng-if="c.data.isValid" class="panel panel-{{::c.options.color}} b">
  <div class="panel-heading">
    <h2 class="panel-title" ng-if="c.data.isMine && (c.data.state == 'requested')">${This {{c.data.label}} requires your approval}</h2>
    <h2 class="panel-title" ng-if="!c.data.isMine && (c.data.state == 'requested')">${This {{c.data.label}} requires approval <span ng-if="c.data.approverDisplay"> by {{c.data.approverDisplay}}}</span></h2>
    <h2 class="panel-title" ng-if="c.data.state == 'approved'">{{data.approvedMsg}}</h2>
    <h2 class="panel-title" ng-if="c.data.state == 'rejected'">{{data.rejectedMsg}}</h2>
  </div>  
  <div class="panel-body">
    <form ng-submit="$event.preventDefault()" class="form-horizontal">
      <div ng-if="c.data.fields.length > 0">
        <div ng-repeat="field in c.data.fields" class="m-b-xs" ng-if="field.value">
          <label class="m-n">{{field.label}}</label>
          <span ng-switch="field.type">
            <div ng-switch-when="glide_date_time" title="{{field.display_value}}"><sn-time-ago timestamp="::field.value" /></div>
            <div ng-switch-default >{{field.display_value}}</div>
          </span>
        </div>
      </div>
      <div ng-if="c.data.isMine && (c.data.state == 'requested')" class="question">
        <button type="button" name="approve" class="btn btn-primary btn-question" ng-click="c.action('approved')">${Approve}</button>
        <div class="spacer"></div>
        <button type="button" name="reject" class="btn btn-default btn-question" ng-click="c.action('rejected')">${Reject}</button>
      <textarea ng-model="c.data.comment" style="color: grey; width: 100%; margin-top: .5em;" placeholder="Rejection Comments" class="form-control" rows="5"></textarea>
      </div>
    </form>
  </div>  
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Green Swap Shop">f6bf51942f610110184155272799b66f</application>
        <file_path/>
        <instance_id>228752691b4c3c1032182f8dee4bcbcb</instance_id>
        <instance_name>dev114967</instance_name>
        <name>sp_widget_250e25411b430110dd75c991604bcb95</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, spUIActionsExecuter, spUtil) {
	var c = this;
	
	var ESIGNATURE = {
		"approved": "cbfe291147220100ba13a5554ee4904d",
		"rejected": "580f711147220100ba13a5554ee4904b"
	};
	
	spUtil.recordWatch($scope, "sysapproval_approver", "state=requested^sys_id="+ c.data.sys_id);

	c.action = function(state) {
		if(c.data.esignature.e_sig_required) {
			var requestParams = {
				username: c.data.esignature.username,
				userSysId: c.data.esignature.userSysId
			};
			spUIActionsExecuter.executeFormAction(ESIGNATURE[state], "sysapproval_approver" , c.data.sys_id, [] , "", requestParams).then(function(response) {
				});
		} else {
				c.data.op = state;
				c.server.update().then(function() {
					if (!c.data.updateID) // update failed
						spUtil.addErrorMessage(c.data.actionPreventedMsg);
					else
						c.data.state = state;
				});
		}
	}	
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.question {
  text-align: center;
  margin-top: 1em;
  display: flex;
  flex-wrap: wrap;
}

.spacer {
  display:inline-block;
  width:5%;
}

.btn-question {
  flex-grow: 1;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data&gt;{
  "data": {
    "fields": [
      {
        "type": "glide_date_time",
        "value": "2016-01-31T17:33:54+00:00",
        "label": "Approval Example Label"
      }
    ],
    "state": "requested",
    "label": "incident"
  },
  "options": {
    "color": "default"
  }
}&lt;/demo_data&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;color&lt;/field_list&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;approval_info_gss&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Approval Info GSS&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.actionPreventedMsg = gs.getMessage("Update failed");
	var gr = $sp.getRecord();
	if (gr == null || !gr.isValid()) {
		data.isValid = false;
		return;
	}
	
	data.isValid = true;
	data.isMine = isApprovalMine(gr);
	var userApprovalAccess = gs.hasRole("approval_admin") || (gs.hasRole("approver_user") &amp;&amp; data.isMine);
	
	var approverDisplay = gr.approver.getDisplayValue();
	if (!data.isMine &amp;&amp; approverDisplay)
		data.approverDisplay = approverDisplay;
	
	if (approverDisplay) {
		data.approvedMsg = gs.getMessage("Approved by {0}", approverDisplay);
		data.rejectedMsg = gs.getMessage("Rejected by {0}", approverDisplay);
	} else {
		data.approvedMsg = gs.getMessage("Approved");
		data.rejectedMsg = gs.getMessage("Rejected");
	}
	if (input &amp;&amp; input.op &amp;&amp; userApprovalAccess) {
		gr.state = input.op;
		data.updateID = gr.update();
		if (GlideStringUtil.nil(data.updateID)) {
			// update failed so fetch again for correct values
			gr = $sp.getRecord();
		}
		data.op = "";
	}

	var fields = $sp.getFields(gr, 'state,sys_created_on');

	if (gr.sys_mod_count &gt; 0)
		fields.push($sp.getField(gr, 'sys_updated_on'));

	data.fields = fields;
	data.state = gr.state.toString();
	data.sys_updated_on = gr.sys_updated_on.toString();
	data.sys_id = gr.getUniqueValue();
	data.table = gr.getTableName();
	data.label = getRecordBeingApproved(gr).getLabel();
	data.esignature = {
		username:  gs.getUserName(),
		userSysId: gs.getUserID(),
		e_sig_required: checkESig(gr)
};
	function checkESig(approvalGR) {
		var esigRegistryGR = new GlideRecord("e_signature_registry");
		if (!esigRegistryGR.isValid())
			return false;
		
		var table = approvalGR.getValue("source_table");
		if (!table)
			table = approvalGR.sysapproval.sys_class_name;
		if (!table)
			return false;
		
		esigRegistryGR.addQuery("enabled", "true");
		esigRegistryGR.addQuery("table_name", table);
		esigRegistryGR.query();
		return esigRegistryGR.hasNext();
	}
	
	function getRecordBeingApproved(gr) {
		if (!gr.sysapproval.nil())
			return gr.sysapproval.getRefRecord();

		return gr.document_id.getRefRecord();
	}
})();
]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;florian.franke&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-04-22 09:26:03&lt;/sys_created_on&gt;&lt;sys_id&gt;250e25411b430110dd75c991604bcb95&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;Approval Info GSS&lt;/sys_name&gt;&lt;sys_package display_value="Green Swap Shop" source="x_762203_green_swa"&gt;f6bf51942f610110184155272799b66f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Green Swap Shop"&gt;f6bf51942f610110184155272799b66f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_250e25411b430110dd75c991604bcb95&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;florian.franke&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-04-22 09:33:56&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if="c.data.isValid" class="panel panel-{{::c.options.color}} b"&gt;
  &lt;div class="panel-heading"&gt;
    &lt;h2 class="panel-title" ng-if="c.data.isMine &amp;&amp; (c.data.state == 'requested')"&gt;${This {{c.data.label}} requires your approval}&lt;/h2&gt;
    &lt;h2 class="panel-title" ng-if="!c.data.isMine &amp;&amp; (c.data.state == 'requested')"&gt;${This {{c.data.label}} requires approval &lt;span ng-if="c.data.approverDisplay"&gt; by {{c.data.approverDisplay}}}&lt;/span&gt;&lt;/h2&gt;
    &lt;h2 class="panel-title" ng-if="c.data.state == 'approved'"&gt;{{data.approvedMsg}}&lt;/h2&gt;
    &lt;h2 class="panel-title" ng-if="c.data.state == 'rejected'"&gt;{{data.rejectedMsg}}&lt;/h2&gt;
  &lt;/div&gt;  
  &lt;div class="panel-body"&gt;
    &lt;form ng-submit="$event.preventDefault()" class="form-horizontal"&gt;
      &lt;div ng-if="c.data.fields.length &gt; 0"&gt;
        &lt;div ng-repeat="field in c.data.fields" class="m-b-xs" ng-if="field.value"&gt;
          &lt;label class="m-n"&gt;{{field.label}}&lt;/label&gt;
          &lt;span ng-switch="field.type"&gt;
            &lt;div ng-switch-when="glide_date_time" title="{{field.display_value}}"&gt;&lt;sn-time-ago timestamp="::field.value" /&gt;&lt;/div&gt;
            &lt;div ng-switch-default &gt;{{field.display_value}}&lt;/div&gt;
          &lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div ng-if="c.data.isMine &amp;&amp; (c.data.state == 'requested')" class="question"&gt;
        &lt;button type="button" name="approve" class="btn btn-primary btn-question" ng-click="c.action('approved')"&gt;${Approve}&lt;/button&gt;
        &lt;div class="spacer"&gt;&lt;/div&gt;
        &lt;button type="button" name="reject" class="btn btn-default btn-question" ng-click="c.action('rejected')"&gt;${Reject}&lt;/button&gt;
      &lt;textarea ng-model="c.data.comment" style="color: grey; width: 100%; margin-top: .5em;" placeholder="Rejection Comments" class="form-control" rows="5"&gt;&lt;/textarea&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/div&gt;  
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1774641039</payload_hash>
        <record_name>Approval Info GSS</record_name>
        <reverted_from/>
        <source>d7865ca61b720110dd75c991604bcb6e</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>florian.franke</sys_created_by>
        <sys_created_on>2022-04-22 09:33:56</sys_created_on>
        <sys_id>01df69851b430110dd75c991604bcb97</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>180509ef6150000001</sys_recorded_at>
        <sys_updated_by>florian.franke</sys_updated_by>
        <sys_updated_on>2022-04-22 09:33:56</sys_updated_on>
        <type>Widget</type>
        <update_guid>09df6985c143011083a1cc1e79a3d896</update_guid>
        <update_guid_history>09df6985c143011083a1cc1e79a3d896:-1774641039,074e2185214301106af455ec2301901c:2038160113,690e2541d2430110d72e7fb4503fba96:955732527</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Approval Info GSS">2ea952491bc30110dd75c991604bcbee</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>florian.franke</sys_created_by>
        <sys_created_on>2022-04-22 12:36:43</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>0e201d7a6e30400897d29fb949512510</sys_id>
        <sys_metadata>250e25411b430110dd75c991604bcb95</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Approval Info GSS</sys_name>
        <sys_package display_value="Green Swap Shop" source="x_762203_green_swa">f6bf51942f610110184155272799b66f</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Green Swap Shop">f6bf51942f610110184155272799b66f</sys_scope>
        <sys_scope_delete display_value="">2341243cbaae473cad7b26845a54ff64</sys_scope_delete>
        <sys_update_name>sp_widget_250e25411b430110dd75c991604bcb95</sys_update_name>
        <sys_update_version display_value="sp_widget_250e25411b430110dd75c991604bcb95">01df69851b430110dd75c991604bcb97</sys_update_version>
        <sys_updated_by>florian.franke</sys_updated_by>
        <sys_updated_on>2022-04-22 12:36:43</sys_updated_on>
    </sys_metadata_delete>
</record_update>
